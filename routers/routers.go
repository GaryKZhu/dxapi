//routers.go created by @bzhu. 

package routers

import (
	"github.com/gin-gonic/gin"
	"github.com/gin-gonic/contrib/static"
	"doctorx/routers/api/v1"
	"doctorx/pkg/jwt"
	"net/http"
	"github.com/swaggo/gin-swagger" // gin-swagger middleware
	"github.com/swaggo/files" // swagger embed files
	_ "doctorx/docs" // docs is generated by Swag CLI, you have to import it.
)



// InitRouter initialize routing information
func InitRouter() *gin.Engine {
	//r := gin.New()
	r := gin.Default()
	r.Use(gin.Logger())
	r.Use(gin.Recovery())
	r.Use(jwt.CORSMiddleware())

	//api v1
	apiv1 := r.Group("/api/v1")
	{
		//apiv1.Use(jwt.VerifyToken())
		apiv1.GET("/ping", v1.Ping)
		apiv1.GET("/user", v1.GetUser)
		apiv1.GET("/reports",v1.GetReports)
		apiv1.GET("/symptoms",v1.GetSymptoms)
		apiv1.GET("/details",v1.GetDetails)
		apiv1.POST("/insertuser", v1.InsertUser)
		apiv1.POST("reports",v1.InsertReport)
		apiv1.POST("/details",v1.InsertDetails)
		apiv1.POST("/symptoms",v1.InsertSymptom)
		apiv1.GET("/bayesestimate",v1.BayesEstimate)
		apiv1.GET("/knnestimate",v1.KnnEstimate)
		apiv1.GET("/multiestimate",v1.MultiEstimate)
		apiv1.POST("/hema", v1.InsertHematology)
		apiv1.POST("/biochem", v1.InsertBiochemistry)
	}
	
	// front end
	r.Use(static.Serve("/", static.LocalFile("./public/build", true)))
	
	// for static html only
	//r.LoadHTMLGlob("./public/build/*")
    // use to map the director e.g. asset
	//r.Static("/asset", "./asset")

	//default page
	r.GET("/", func(c *gin.Context) {
		c.HTML(http.StatusOK, "index.html", gin.H{})
	})

	//404 error
	r.NoRoute(func(c *gin.Context) {
		c.HTML(404, "404.html", gin.H{})
	})

	
	//swag
	url := ginSwagger.URL("http://localhost:8080/swagger/doc.json") // The url pointing to API definition
	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler, url))

	return r
}